version: '2.5'
services:
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./angular-client
      args:
        - GITPOD_WORKSPACE_URL
    volumes:
      #In questo modo dico a docker di usare la cartella del container /app/node_modules come volume
      #La cartella locale node_modules non verrà più copiata
      - /app/node_modules
      #Qui mappa tutto il contenuto della cartella locale client nella cartella app dell'immagine
      #Ricorda che la WORKDIR dell'immagine è la cartella app
      - ./angular-client:/app
    ports:
      - 4200:4200
    networks:
      - shared-network
  server:
    build:
      dockerfile: Dockerfile.dev
      context: ./express-server
      args:
        - NODE_ENV=development
    volumes:
      - ./express-server:/app
    ports:
      - 3000:3000
    networks:
      - shared-network
  mongo-server:
    image: mongo:latest #Possiamo specificare 'immagine anche da qui senza usare un Dockerfile
    environment:
      #setta alcune variabili d'ambiente
      - MONGO_INITDB_DATABASE=sdg-14
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      #Crea un nuovo bineded volume per il container di mongoDB (condividento il file init-db.js)
      # https://stackoverflow.com/questions/42912755/how-to-create-a-db-for-mongodb-container-on-start-up
      - ./mongo-server/init-db.js:/docker-entrypoint-initdb.d/init-db.js:ro
    ports:
      - 27017:27017
networks:
  shared-network:
